{"version":3,"sources":["utils/utils.js","components/CarAvailability.jsx","pages/Home.jsx","components/CarDetails.jsx","pages/CarInfo.jsx","App.js","reportWebVitals.js","index.js"],"names":["getFormattedDate","dt","d","Date","console","log","toLocaleDateString","CarAvailability","useState","cars","setCars","vehRentalCore","setVehRentalCore","vehVendorAvails","setVehVendorAvails","arrAvailableCars","setArrAvailableCars","vehCode","setVehCode","useEffect","getCarsData","VehRentalCore","VehVendorAvails","ar","getAvailableCars","Event","a","fetch","response","json","data","VehAvailRSCore","evt","venCode","arrCA","filteredCars","reduce","arr","elem","concat","VehAvails","hasActive","target","classList","length","remove","add","filter","c","Vendor","className","PickUpLocation","ReturnLocation","map","ven","index","vName","vCode","onClick","e","car","to","pathname","state","src","Vehicle","PictureURL","alt","VehMakeModel","title","TotalCharge","Home","CarDetails","useLocation","CarInfo","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3dee7b7c.chunk.js","sourcesContent":["const getFormattedDate = (dt) => {\n  const d = new Date(dt);\n  console.log(d.toLocaleDateString());\n  return d.toLocaleDateString();\n};\n\nexport { getFormattedDate };\n","import React, { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport { getFormattedDate } from \"../utils/utils\";\n\nexport default function CarAvailability() {\n\n    const [cars, setCars] = useState(null);\n    const [vehRentalCore, setVehRentalCore] = useState(null);\n    const [vehVendorAvails, setVehVendorAvails] = useState(null);\n    const [arrAvailableCars, setArrAvailableCars] = useState([]);\n    // const [vendors, setVendors] = useState([]);\n    const [vehCode, setVehCode] = useState(\"\");\n    // let vendors = [];\n\n    useEffect(() => {\n        getCarsData();\n        setVehCode(\"All\");\n        // console.log(\"vehRentalCore\", cars.VehRentalCore, vehRentalCore);\n    }, []);\n\n    useEffect(() => {\n        if (cars) {\n            // console.log(\"cars\", cars);\n            setVehRentalCore(cars.VehRentalCore);\n            setVehVendorAvails(cars.VehVendorAvails);\n            // console.log(\"cars.VehRentalCore\", cars.VehRentalCore);\n            // console.log(\"cars.VehVendorAvails\", cars.VehVendorAvails);\n            const ar = getAvailableCars(Event, vehVendorAvails, vehCode);\n            // console.log('ar', ar);\n            setArrAvailableCars(ar);\n        }\n    }, [cars, vehVendorAvails, vehCode]);\n\n    const getCarsData = async () => {\n        const response = await fetch(\"https://www.cartrawler.com/ctabe/cars.json\");\n        const data = await response.json();\n        // console.log(\"data\", data[0].VehAvailRSCore)\n        setCars(data[0].VehAvailRSCore);\n    }\n\n    const getAvailableCars = (evt, vehVendorAvails, venCode) => {\n        // console.log(\"vendors\", vendors);\n        console.log(\"vehVendorAvails, venCode\", vehVendorAvails, venCode);\n        let arrCA, filteredCars;\n        if (vehVendorAvails && venCode === \"All\") {\n            // vendors.push(\"All\");\n            // console.log(\"IF venCode\", venCode);\n            arrCA =  vehVendorAvails.reduce(\n                (arr, elem) => arr.concat(elem.VehAvails), []\n            );\n            setArrAvailableCars(arrCA);\n        } else {\n            if (vehVendorAvails) {\n                const hasActive = evt.target.classList;\n                // vendors = [...vendors, venCode];\n                console.log('ELSE EVENT', evt);\n                if (hasActive.length) {\n                    evt.target.classList.remove(\"active\");\n                } else {\n                    evt.target.classList.add(\"active\");\n                }\n                \n                // evt.target.classList.remove(\"active\");\n                vehVendorAvails.filter((c) => {\n                    if (c.Vendor[\"@Code\"] === venCode) {\n                        filteredCars = c.VehAvails;\n                    }\n                    // filteredCars = {...filteredCars };\n                    return filteredCars;\n                })\n            }\n            setArrAvailableCars(filteredCars);\n        }\n        // console.log(\"arrCA\", arrCA);\n        return arrCA;\n    }\n\n    return (\n        <>\n            { vehRentalCore && (\n                <div className=\"legends\">\n                    <h2>Pickup/Return information (Legend)</h2>\n                    <div className=\"vehRental\">\n                        <ul>\n                            <li>PickUp Date: { getFormattedDate(vehRentalCore[\"@PickUpDateTime\"])}</li>\n                            <li>Return Date: { getFormattedDate(vehRentalCore[\"@ReturnDateTime\"])}</li>\n                            <li>PickUp Location: { vehRentalCore.PickUpLocation[\"@Name\"]}</li>\n                            <li>Return Location: { vehRentalCore.ReturnLocation[\"@Name\"]}</li>\n                        </ul>\n                    </div>\n                    \n                </div> \n                ) \n            }\n            {\n                vehVendorAvails && (\n                    <div className=\"vehVendor\">\n                        <h2>Vendors</h2>\n                        <ul>\n                            {vehVendorAvails.map((ven, index) => {\n                                const vName = ven.Vendor[\"@Name\"];\n                                const vCode = ven.Vendor[\"@Code\"];\n                                // vendors.push(vCode);\n                            return (<li key={index} className=\"\" onClick={(e)=> {getAvailableCars(e, vehVendorAvails, vCode)}}>{ vName } ({ vCode })</li>)\n                        })}\n                            </ul>\n                    {/* {console.log(\"vehVendorAvails\", vehVendorAvails)} */}\n                    </div>\n                )\n            }\n            {\n                vehVendorAvails && arrAvailableCars && (\n                    <div className=\"vehAvails\">\n                        <h2>Available Cars</h2>\n                        {/* {\n                            console.log(\"setArrAvailableCars\", arrAvailableCars)\n                        } */}\n                        <main className=\"cards\">\n                            {\n                                arrAvailableCars.map((car, index) => {\n                                    return (\n                                        \n                                        <article className=\"card\" key={index}>\n                                            <Link to={{\n                                            pathname: \"/car-details\",\n                                            state: car\n                                            }}>\n                                                <img src={car.Vehicle.PictureURL} alt={car.Vehicle.VehMakeModel[\"@Name\"]} title={car.Vehicle.VehMakeModel[\"@Name\"]} />\n                                                <div className=\"text\">\n                                                    <h4>{car.Vehicle.VehMakeModel[\"@Name\"]}</h4>\n                                                    <p>\n                                                        <span className=\"title\">Total Charge</span><span className=\"card-text\">{(car.TotalCharge[\"@CurrencyCode\"])} {(car.TotalCharge[\"@RateTotalAmount\"])} </span>\n                                                        {/* <span className=\"title\">Air Condition</span><span className=\"card-text\">{(car.Vehicle[\"@AirConditionInd\"]) ? \"Available\" : \"UnAvailable\"}</span>\n                                                        <span className=\"title\">Transmission Type</span><span className=\"card-text\">{car.Vehicle[\"@TransmissionType\"]}</span> */}\n                                                        <span className=\"title\">Fuel Type</span><span className=\"card-text\">{car.Vehicle[\"@FuelType\"]}</span>\n                                                        {/* <span className=\"title\">Drive Type</span><span className=\"card-text\">{car.Vehicle[\"@DriveType\"]}</span> */}\n                                                        <span className=\"title\">Passenger Quantity</span><span className=\"card-text\">{car.Vehicle[\"@PassengerQuantity\"]}</span>\n                                                        {/* <span className=\"title\">Baggage Quantity</span><span className=\"card-text\">{car.Vehicle[\"@BaggageQuantity\"]}</span> */}\n                                                    </p>\n                                                </div>\n                                            </Link>\n                                        </article>  \n                                    )\n                                })\n                            }\n                            \n                        </main>\n                    </div>\n                )\n            }\n           \n        </>\n    )\n}\n","import React from 'react';\n\nimport CarAvailability from \"../components/CarAvailability\";\n\nexport default function Home() {\n    return (\n        <div className=\"container\">\n            <h1>Car rental availability</h1>\n            <CarAvailability />\n        </div>\n    )\n}\n","import React from 'react';\nimport { Link, useLocation } from \"react-router-dom\";\n\nexport default function CarDetails() {\n    const location = useLocation();\n    const { TotalCharge, Vehicle } = location.state;\n    // console.log(\"Car details car = \", TotalCharge, Vehicle);\n    return (\n        <>\n            <h1>Car Details</h1>\n            <div className=\"vehAvails\">\n                <Link to=\"/\">Go Back to Home</Link>\n                <main className=\"cards\">\n                    <article className=\"card\">\n                        <img src={Vehicle.PictureURL} alt={Vehicle.VehMakeModel[\"@Name\"]} title={Vehicle.VehMakeModel[\"@Name\"]} />\n                        <div className=\"text\">\n                            <h4>{Vehicle.VehMakeModel[\"@Name\"]}</h4>\n                            <p>\n                                <span className=\"title\">Total Charge</span><span className=\"card-text\">{(TotalCharge[\"@CurrencyCode\"])} {(TotalCharge[\"@RateTotalAmount\"])} </span>\n                                <span className=\"title\">Air Condition</span><span className=\"card-text\">{(Vehicle[\"@AirConditionInd\"]) ? \"Available\" : \"UnAvailable\"}</span>\n                                <span className=\"title\">Transmission Type</span><span className=\"card-text\">{Vehicle[\"@TransmissionType\"]}</span>\n                                <span className=\"title\">Fuel Type</span><span className=\"card-text\">{Vehicle[\"@FuelType\"]}</span>\n                                <span className=\"title\">Drive Type</span><span className=\"card-text\">{Vehicle[\"@DriveType\"]}</span>\n                                <span className=\"title\">Passenger Quantity</span><span className=\"card-text\">{Vehicle[\"@PassengerQuantity\"]}</span>\n                                <span className=\"title\">Baggage Quantity</span><span className=\"card-text\">{Vehicle[\"@BaggageQuantity\"]}</span>\n                            </p>\n                        </div>\n                    </article>\n                </main>\n            </div>\n        </>\n    )\n}\n","import React from 'react';\n\nimport CarDetails from \"../components/CarDetails\";\n\nexport default function CarInfo() {\n    return (\n        <div>\n            <CarDetails />\n        </div>\n    )\n}","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./styles/styles.scss\";\nimport Home from \"./pages/Home\";\nimport CarInfo from \"./pages/CarInfo\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Router>\n        <Switch>\n          <Route path=\"/car-details\" component={CarInfo} />\n          <Route path=\"/\" component={Home} exact />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}